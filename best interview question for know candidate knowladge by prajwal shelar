{
        "id" : "26",
        "question" : " How Does an Android App Work?",
        "answerLink" : "1-Building the APK File
                          a-Code Compilation
                          b-Conversion into Dalvik bytecodes
                          c-Generating .apk file
                          d-App Distribution
                        2-Deploy the Application
                          a-Establish the ADB Server
                          b-Transfer .apk file to the Device
                        3-Run the Application  
                          a-App launch request
                          b-Conversion of the .dex code to native OAT format"
    }, 
    {
        "id" : "27",
        "question" : "What can you bring to the company?",
        "answerLink" : "Well, I’m currently an account executive at Smith, where I handle our top-performing client."
    }, 
     {
        "id" : "28",
        "question" : "Q.Find the output of the following program?
 public class Prg {  
    public static void main(String args[]){  
        System.out.print("A" + "B" + 'A');  
    }  
}  ",
        "answerLink" : "Then answer is ABA because it is the string concatination here ."
    }, 
      {
        "id" : "29",
        "question" : "Why do we use the word “debugger” in javascript?",
        "answerLink" : "The debugger keyword is used in the code to force stop the execution of the code at a breaking point and calls the debugging function.
        The debugger function is executed if any debugging is needed at all else no action is performed"
    }, 
    "id":"30",
    "question":what is tree in dsa ?
ans: - A tree is a nonlinear hierarchical data structure that consists of nodes connected by edges.
Why Tree Data Structure?
Other data structures such as arrays, linked list, stack, and queue are linear data structures that store data sequentially. In order to perform any operation in a linear data structure, the time complexity increases with the increase in the data size. But, it is not acceptable in today's computational world.

Different tree data structures allow quicker and easier access to the data as it is a non-linear data structure.

Tree Terminologies
Node
A node is an entity that contains a key or value and pointers to its child nodes.

The last nodes of each path are called leaf nodes or external nodes that do not contain a link/pointer to child nodes.

The node having at least a child node is called an internal node.

Edge
It is the link between any two nodes.
Root
It is the topmost node of a tree.

Height of a Node
The height of a node is the number of edges from the node to the deepest leaf (ie. the longest path from the node to a leaf node).

Depth of a Node
The depth of a node is the number of edges from the root to the node.

Height of a Tree
The height of a Tree is the height of the root node or the depth of the deepest node.

Degree of a Node
The degree of a node is the total number of branches of that node.

Forest
A collection of disjoint trees is called a forest."

}
      
           
           ]
